openapi: 3.1.0
info:
  title: API for draft-ietf-scitt-scrapi
  description: |-
    This is API specification that allows OpenAPI-compatible software to generate
    server or client software conforming to the API defined in the Internet Draft
    [draft-ietf-scitt-scrapi](https://datatracker.ietf.org/doc/draft-ietf-scitt-scrapi/).

    Some useful links:
    - [The official Internet Draft](https://datatracker.ietf.org/doc/draft-ietf-scitt-scrapi/)
    - [The editors' GitHub repo](https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/)

  contact:
    email: iam@ajstein.me
  license:
    name: GNU General Public License  v3.0
    url: https://github.com/aj-stein/ietf-scrapi-openapi/blob/main/LICENSE
  version: 0.1.0
externalDocs:
  description: Find out more about this project
  url: https://github.com/aj-stein/ietf-scrapi-openapi
servers:
  - url: https://example.net
tags:
  - name: Architecture
    description: SCITT Architecture
    externalDocs:
      description: Official draft
      url: https://datatracker.ietf.org/doc/draft-ietf-scitt-architecture
paths:
  /.well-known/transparency-configuration:
    get:
      summary: Resolve service configuration
      description: Get the configuration a SCRAPI-conformant Transparency Service
      operationId: TSConfigurationGet
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleRegistrationPolicy'
  /.well-known/issuer/tenant/{tenantId}:
    get:
      summary: Resolve an Issuer
      description: Resolve an Issuer for this Transparency Service by their ID.
      operationId: IssuerGet
      parameters:
        - name: tenantId
          in: path
          description: ID of the Issuer to be resolve
          required: true
          schema:
            type: integer
            format: int64
  /entries:
    post:
      summary: Register a Signed Statement
      description: Register a Signed Statement on a SCRAPI-conformant Transparency Service
      operationId: SignedStatementRegister
      requestBody:
        description: the request body is the Signed Statement in COSE format 
        required: true
        content:
          application/cose:
            schema:
              type: string
              format: binary
  /signed-statements/issue:
    post:
      summary: Issue a Signed Statement
      description: Issue a Signed Statement client lacks the ability to perform complex cryptographic operations, but can be authenticated and report statements and measurements.
      operationId: SignedStatementIssue
      requestBody:
        description: the request body is the Signed Statement to issue in COSE format 
        required: true
        content:
          application/cose:
            schema:
              type: string
              format: binary      
  /statements/{statementId}:
    get:
      summary: Resolve a Statement
      description: Retrieve a Statement by its ID to retrieve its content.
      operationId: StatementGet
      parameters:
        - name: statementId
          in: path
          description: ID of the Statement to resolve in urn form
          required: true
          schema:
            type: string
            format: uri
  /signed-statements/{signedStatementId}:
    get:
      summary: Resolve a Signed Statement
      description: Retrieve a Signed Statement by its ID to retrieve its content.
      operationId: SignedStatementGet
      parameters:
        - name: signedStatementId
          in: path
          description: ID of the Signed Statement to resolve in urn form
          required: true
          schema:
            type: string
            format: uri      
  /receipts/{receiptId}:
    get:
      summary: Resolve a Receipt
      description: Retrieve a Receipt by its ID to retrieve its content.
      operationId: ReceiptGet
      parameters:
        - name: receiptId
          in: path
          description: ID of the Receipt to resolve in urn form
          required: true
          schema:
            type: string
            format: uri      
  /exchange/receipts:
    get:
      summary: Exchange a Receipt
      description: Retrieve an updated Receipt by resubmitting an old or expired receipt.
      operationId: ReceiptExchange
  /nonce:
    get:
      summary: Request a Nonce
      description: Request a nonce to provide with other operations and provide proof of possession for clients holding Signed Statements.
      operationId: NonceGet
components:
  schemas:
    ExampleRegistrationPolicy:
      type: object
      properties:
        issuer:
          type: string
          examples: ["https://example.net"]
        registration_endpoint:
          type: string
          examples: ["https://example.net/entries"]
        nonce_endpoint:
          type: string
          examples: ["https://example.net/nonce"]
        registration_policy:
          type: string
          examples: ["https://example.net/statements/urn:ietf:params:scitt:statement:sha-256:base64url:5i6UeRzg1...qnGmr1o"]
        supported_signature_algorithms:
          type: array
          items:
            type: string
            examples: ["ES256"]
        jwks:
          type: object
          properties:
            keys:
              type: array
              items:
                type: object
                properties:
                  kid:
                    type: string
                    examples: ["urn:ietf:params:oauth:jwk-thumbprint:sha-256:DgyowWs04gfVRim5i1WlQ-HFFFKI6Ltqulj1rXPagRo"]
                  alg:
                    type: string
                    examples: ["ES256"]
                  use:
                    type: string
                    examples: ["sig"]
                  kty:
                    type: string
                    examples: ["EC"]
                  crv:
                    type: string
                    examples: ["P-256"]
                  x:
                    type: string
                    examples: ["p-kZ4uOASt9IjQRTrWikGnlbGb-z3LU1ltwRjZaOS9w"]
                  y:
                    type: string
                    examples: ["ymXE1yltJPXgjQSRe9NweN3TLlSUALYZTzy83NVfdg0"]